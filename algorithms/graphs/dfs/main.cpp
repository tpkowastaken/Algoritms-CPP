#include <iostream>

using namespace std;
const int n = 10;
int in[n], out[n];
int location; // value for determining ins and outs
bool connections[n][n] = { // n=10 pras√°tko
{0,1,0,1,0,0,0,0,0,1},
{0,0,1,1,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{1,0,0,1,0,0,0,1,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,1,0,0,0},
{0,0,0,0,0,0,1,0,0,0}
};
/*//n = 13 muj graf
bool connections[n][n] = {
{0,1,0,0,0,1,0,0,0,0,0,0,0},
{1,0,1,0,1,0,0,0,0,0,0,0,0},
{0,1,0,1,0,0,0,0,0,0,0,0,0},
{0,0,1,0,1,0,0,1,0,0,0,0,1},
{0,1,0,1,0,1,0,1,0,0,0,0,0},
{1,0,0,0,1,0,1,1,0,0,0,0,0},
{0,0,0,0,0,1,0,0,1,0,0,1,0},
{0,0,0,1,1,1,0,0,1,0,0,0,0},
{0,0,0,0,0,0,1,1,0,1,0,0,0},
{0,0,0,0,0,0,0,0,1,0,1,1,1},
{0,0,0,0,0,0,0,0,0,1,0,0,0},
{0,0,0,0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,0,0,0,1,0,0,0}
};
*/
void dfs(int num){
    location++;
    cout << "(" << num;
    in[num] = location;
    for(int i = 0;i<n;i++){
        if(connections[num][i] && !in[i]){
            dfs(i);
        }
    }
    location++;
    cout << ")" << num;
    out[num] = location;
}
int main(){
    dfs(0);
    cout << "\nnum  in  out\n";
    for(int i = 0;i<n;i++){
        cout << i << "  " << in[i] << "  " << out[i] << "\n";
    }
}
